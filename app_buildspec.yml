version: 0.2
        
phases:
  install:
    on-failure: ABORT
    runtime-versions:
      nodejs: latest
    commands:
      - echo "Commit ID - ${Commit_ID}"
      #- echo "DOING NOTHING (WIP)"
      # Updates package repositories in image
      - apt-get -y -qq update
      - n 16

  pre_build:
    on-failure: ABORT
    commands:
      - echo "DOING NOTHING (WIP)"

  build:
    on-failure: ABORT
    commands:
      - |
        if expr "${Phase}" : "APP_BUILD" >/dev/null;
        then
          echo "Installing npm modules for gateway service..."
          cd services/gateway
          npm install;
        fi
      - |
        if expr "${Phase}" : "APP_TEST" >/dev/null;
        then
          echo "Testing gateway service..."
          cd services/gateway
          npm test;
        fi
      - |
        if expr "${Phase}" : "APP_PUBLISH" >/dev/null;
        then
          echo "Publishing gateway service in ECR..."
          aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${Account_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com
          cd services/gateway
          docker build -t zdriv-service-gateway .
          docker tag zdriv-service-gateway:latest ${Account_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/zdriv-service-gateway:latest
          docker push ${Account_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/zdriv-service-gateway:latest;
        fi

  post_build:
    on-failure: ABORT
    commands:
      - echo "DOING NOTHING (WIP)"
      - rm -rf .terraform terraform terraform_${TF_VERSION}_linux_amd64.zip

artifacts:
  files:
    - '**/*'
